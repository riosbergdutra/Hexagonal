pipeline {
    agent any

    stages {
        stage('Build Docker Image') {
            steps {
               script {
                dockerapp = docker.build("riosberg/hexagonal:${env.BUILD_ID}", "-f hexagonal/Dockerfile hexagonal")
               }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry("https://registry.hub.docker.com", 'dockerhub') {
                        dockerapp.push("latest")
                        dockerapp.push("${env.BUILD_ID}")
                    }
                }
            }
        }
         stage('Deploy no Kubernets') {
            steps {
                sh 'kubectl apply -f kubernetes/deployment.yaml'
            }
        }
    }
}
